package main

import (
	"fmt"
	"singlishwords/controller"

	"github.com/fvbock/endless"
	"github.com/gin-gonic/gin"

	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"

	_ "singlishwords/docs" // docs is generated by Swag CLI, you have to import it.
)

func sayBye() {
	fmt.Println("Bye from myself.")
}

// @title Singlish words API document
// @version 1.0
// @description This is a sample server Petstore server.
// @termsOfService http://swagger.io/terms/

// @contact.name API Support
// @contact.url http://www.swagger.io/support
// @contact.email support@swagger.io

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host petstore.swagger.io
// @BasePath /v2
func main() {
	defer sayBye()

	r := gin.Default()
	r.GET("/swagger/*any", ginSwagger.DisablingWrapHandler(swaggerFiles.Handler, "NAME_OF_ENV_VARIABLE"))

	controller.InitRouter(r)

	err := endless.ListenAndServe(":8080", r)

	if err != nil {
		fmt.Println("Wrong when serving1")
	}

	fmt.Println("Wrong when serving~~~~")
	// r.Run()

	// r := gin.Default()
	// v1 := r.Group("/v1")
	// {
	// 	v1.GET("/ping", func(c *gin.Context) {
	// 		c.JSON(200, gin.H{
	// 			"message": "pong 1",
	// 		})
	// 	})
	// }

	// v2 := r.Group("/v2")
	// {
	// 	v2.GET("/ping", func(c *gin.Context) {
	// 		c.JSON(200, gin.H{
	// 			"message": "pong 2",
	// 		})
	// 	})
	// }

	// r.GET("/ping", func(c *gin.Context) {
	// 	c.JSON(200, gin.H{
	// 		"message": "pong",
	// 	})
	// })

	// r.GET("/panic", func(c *gin.Context) {
	// 	// panic with a string -- the custom middleware could save this to a database or report it to the user
	// 	panic("foo")
	// })
	// r.Run() // listen and serve on 0.0.0.0:8080 (for windows "localhost:8080")
}
